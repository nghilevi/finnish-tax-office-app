Portal view (Oma-vero – palvelunäkymä) Mikael (My tax - service view)
a tax portal to be used in mobile devices
proto case2: veroportaali opiskelijatyönä (cong thong tin thue cua sv)
ownTax view
OmaVero-palveluna¨kyma¨
________________________________________
-          question: what type of communication options there are to communicate between end-users and organizations (chat online, rule-based question&answer)
-          question: how much functionality should be in the client-side and how much on the server?
-          see power-point from mike
-          what’s the most useful way of showing lots of data in a mobile device? (ex: tuloverotuspäätökset)
-          Milestone: nghi suggests a date when 3 mockup options are ready for review
________________________________________
About the “portal”:
 
I’m afraid I haven’t had the time to do any translations yet, will try to squeeze in this task in my schedule (this week I’m at work only mon-wed). But I could try to explain some features right away:
 
The “portal” idea is based on a number of “generic functionalities”, which all customers should be able to use regarding all their different taxes. I’ll list them here:
 
1.    Request to the customer (taxpayer) to check existing information & provide additional information (working name: “Check and Add”)

2.    Possibility for customer to apply for something (working name: “My applications”)

3.    Possibility for customer to review existing information about himself (working name: “My data”)

4.    View of the customers financial situation (“tax account”) & possibility to make necessary payments (working name: “My account”)

5.    “Archive” function – possibility for customer to view “old cases” > primarly documents, ie. letters or decisions or requests for information. (working name: “My archive”)

6.    Proactive guidance (working name: “General information”)

7.    “powers of attorney” > a possibility for the customer to mandate someone to act on his behalf (NB: this is something that has to be solved on a governmental level) (working name: “My mandates”)

 
Some main features of these functionalities:
 
·         The tax administration should be able to send a message to the customer with the request to view one or several data items (a form) and (possibly) make some changes (corrections or additions) (F1)

·         The customer should be able to fill in an empty or pre-populated application form with the necessary data (F2)

·         The customer should be able to view/check a number of hierarchically organized data fields (and possibly make some changes or additions) (F3)

·         A generic “bank account” view with payments due, balance, made payments etc. (F4)

·         An archive with the minimum requirement of viewing the mainly text-based content in a number of documents, that traditionally are printed on A4 and sent my snail mail to the customer (F5)

·         F6 and F7 can be disregarded for now
________________________________________

We should actually focus on the presentation of an idea where the customer identifies himself already from the beginning and thereby receives personalized information already on the page that you have created.
 
Attached you’ll find some initial thoughts: the texts on the “buttons” needs to be refined in order to reflect the functionality. In addition to this, there should perhaps be an “active” and a “passive” area of functions on the screen – by this I mean an “inbox” for received requests to act (“Items to check”) AND possible due payments (“payments due”). The list of possible applications that a customer can make could somehow be filtered according to the customers own data or profile > ie. the “Suggested applications” should represent the customers present status and financial situation – a student would get a suggestion to change his withholding percentage (apply for a tax card) whereas a person who owns a rental flat would get an application to fill in all possible costs of the flat in order to get a deduction in his income taxation…

